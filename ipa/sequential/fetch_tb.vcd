$date
	Wed Mar  8 23:25:51 2023
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module fetch_tb $end
$var wire 64 ! valP [63:0] $end
$var wire 64 " valC [63:0] $end
$var wire 4 # rB [3:0] $end
$var wire 4 $ rA [3:0] $end
$var wire 1 % in_mem $end
$var wire 1 & in_inst $end
$var wire 4 ' ifun [3:0] $end
$var wire 4 ( icode [3:0] $end
$var wire 1 ) hlt $end
$var reg 64 * PC [63:0] $end
$var reg 1 + clk $end
$scope module UUT $end
$var wire 64 , PC [63:0] $end
$var wire 1 + clk $end
$var reg 1 ) hlt $end
$var reg 4 - icode [3:0] $end
$var reg 4 . ifun [3:0] $end
$var reg 1 & in_inst $end
$var reg 1 % in_mem $end
$var reg 16 / instr [0:15] $end
$var reg 4 0 rA [3:0] $end
$var reg 4 1 rB [3:0] $end
$var reg 64 2 valC [63:0] $end
$var reg 64 3 valP [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
b0 ,
0+
b0 *
x)
bx (
bx '
x&
x%
bx $
bx #
bx "
bx !
$end
#1000
b10 !
b10 3
b11 #
b11 1
b1 $
b1 0
b0 '
b0 .
b110 (
b110 -
b110000000010011 /
0)
0&
0%
1+
#2000
0+
#3000
b1100 !
b1100 3
b100000000000000100 "
b100000000000000100 2
b1111 $
b1111 0
b11 (
b11 -
b11000011110011 /
b10 *
b10 ,
1+
#4000
0+
#5000
b1110 !
b1110 3
b1111 #
b1111 1
b11 $
b11 0
b1010 (
b1010 -
b1010000000111111 /
b1100 *
b1100 ,
1+
#6000
0+
#7000
b1111 !
b1111 3
b1 (
b1 -
b1000001100000 /
b1110 *
b1110 ,
1+
#8000
0+
#9000
b10001 !
b10001 3
b10 #
b10 1
b10 $
b10 0
b110 (
b110 -
b110000000100010 /
b1111 *
b1111 ,
1+
#10000
0+
#11000
b11010 !
b11010 3
b1000000000 "
b1000000000 2
b11 '
b11 .
b111 (
b111 -
b111001100000000 /
b10001 *
b10001 ,
1+
#12000
0+
#13000
b11100 !
b11100 3
b10 (
b10 -
b10001100100010 /
b11010 *
b11010 ,
1+
#14000
0+
#15000
b11110 !
b11110 3
b10 '
b10 .
b10001000100010 /
b11100 *
b11100 ,
1+
#16000
0+
#17000
b101000 !
b101000 3
b10 "
b10 2
b0 #
b0 1
b1 $
b1 0
b0 '
b0 .
b101 (
b101 -
b101000000010000 /
b11110 *
b11110 ,
1+
#18000
0+
#19000
b110010 !
b110010 3
b100 "
b100 2
b11 #
b11 1
b100 (
b100 -
b100000000010011 /
b101000 *
b101000 ,
1+
#20000
0+
#21000
b111011 !
b111011 3
b11000000 "
b11000000 2
b1000 (
b1000 -
b1000000000000000 /
b110010 *
b110010 ,
1+
#22000
0+
#23000
b111101 !
b111101 3
b1111 #
b1111 1
b1011 (
b1011 -
b1011000000011111 /
b111011 *
b111011 ,
1+
#24000
0+
#25000
b111110 !
b111110 3
1)
b0 (
b0 -
b0xxxxxxxx /
b111101 *
b111101 ,
1+
#26000
0+
#27000
1&
bx '
bx .
bx (
bx -
bx /
0)
b111110 *
b111110 ,
1+
#28000
0+
#29000
1&
1+
